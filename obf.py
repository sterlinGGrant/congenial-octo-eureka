import marshal, base64
encoded_byte_code = "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"
byte_code = base64.b64decode(encoded_byte_code)
code = marshal.loads(byte_code)
exec(code)
